version: "3.8"

services:
  mysqldb:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}
    volumes:
      - db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - evalmed-network


  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    depends_on:
      mysqldb:
        condition: service_healthy
    
    ports:
      - ${APP_PORT}
      - "8080:8080"  
    environment:
      SPRING_APPLICATION_JSON: >
        {
          "spring.datasource.url": "jdbc:mysql://mysqldb:3306/${MYSQL_DATABASE}?useSSL=false&allowPublicKeyRetrieval=true",
          "spring.datasource.username": "${MYSQL_USER}",
          "spring.datasource.password": "${MYSQL_PASSWORD}",
          "spring.jpa.hibernate.ddl-auto": "update",
          "db.email": "${DB_EMAIL}",
          "db.password": "${DB_PASSWORD}"
        }

    volumes:
      - ./uploads:/uploads 
    networks:
      - evalmed-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    ports:
      - ${FRONTEND_PORT_VITE}
    volumes:
      - ./frontend:/app
      - /app/node_modules
              
    environment:
      - VITE_APP_API_URL=${VITE_APP_API_URL}
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true    
    depends_on:
      - backend
            
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 10s
      timeout: 5s
      retries: 10

    networks:
      - evalmed-network


  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - evalmed-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - evalmed-network
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}

networks:
  evalmed-network:

volumes:
  db:
  grafana-storage:
