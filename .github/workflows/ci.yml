name: CI Pipeline

on:
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled]

jobs:
  build:
    if: |
      !(github.event.pull_request.draft == true &&
        contains(join(github.event.pull_request.labels.*.name, ','), 'ci:skip'))
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ChargeUnity/backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Pre-fetch dependencies
        run: mvn dependency:go-offline

      - name: Build project
        run: mvn clean install

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: |
            ChargeUnity/backend/target/classes
            ChargeUnity/backend/target/*.jar

  test:
    if: |
      !(github.event.pull_request.draft == true &&
        contains(join(github.event.pull_request.labels.*.name, ','), 'ci:skip'))
    name: Test and Coverage
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ChargeUnity/backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4quests

      - name: Run tests and generate coverage
        run: mvn test jacoco:report -T 4

      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: ChargeUnity/backend/target/site/jacoco/

  sonar:
    if: |
      !(github.event.pull_request.draft == true &&
        contains(join(github.event.pull_request.labels.*.name, ','), 'ci:skip'))
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: ChargeUnity/backend

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ChargeUnity/backend/target/

      - name: Download JaCoCo report
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: ChargeUnity/backend/target/site/jacoco/

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=ChargeUnity_TQS_ChargeUnity \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
  
  integration-test:
    if: |
      !(github.event.pull_request.draft == true &&
        contains(join(github.event.pull_request.labels.*.name, ','), 'ci:skip'))
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ChargeUnity/backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ChargeUnity/backend/target/

      - name: Run integration tests
        run: ./mvnw test -Dtest=*IT

  xray-integration:
    if: |
      !(github.event.pull_request.draft == true &&
        contains(join(github.event.pull_request.labels.*.name, ','), 'ci:skip'))
    name: Xray Integration
    runs-on: ubuntu-latest
    needs: integration-test
    defaults:
      run:
        working-directory: ChargeUnity/backend
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Debug Secrets
        run: |
          if [ -z "${{ secrets.XRAY_CLIENT_ID }}" ]; then
            echo "❌ XRAY_CLIENT_ID is not set"
            exit 1
          else
            echo "✅ XRAY_CLIENT_ID is set"
          fi
          
          if [ -z "${{ secrets.XRAY_CLIENT_SECRET }}" ]; then
            echo "❌ XRAY_CLIENT_SECRET is not set"
            exit 1
          else
            echo "✅ XRAY_CLIENT_SECRET is set"
          fi

      - name: Run tests and upload to Xray
        env:
          XRAY_CLIENT_ID: ${{ secrets.XRAY_CLIENT_ID }}
          XRAY_CLIENT_SECRET: ${{ secrets.XRAY_CLIENT_SECRET }}
        run: |
          # Run tests first to generate reports
          mvn clean test -Pxray-unit
          
          # Then upload to Xray
          mvn xray:import-results -Pxray-unit \
            -Dxray.clientId="${XRAY_CLIENT_ID}" \
            -Dxray.clientSecret="${XRAY_CLIENT_SECRET}"