name: CD - Deploy ChargeUnity (teste na CH-88)

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: ChargeUnity Deploy
    runs-on: self-hosted

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Criar ficheiro .env com secrets
        working-directory: ChargeUnity
        run: |
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_PORT=3307:3306" >> .env
          echo "APP_PORT=8080:8080" >> .env
          echo "FRONTEND_PORT_VITE=5173:5173" >> .env
          echo "VITE_APP_API_URL=http://deti-tqs-08.ua.pt:8080" >> .env
          echo "DB_EMAIL=${{ secrets.DB_EMAIL }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

      - name: Criar ficheiro application.properties com secrets
        working-directory: ChargeUnity/backend/src/main/resources
        run: |
          echo "spring.application.name=ChargeUnity" > application.properties
          echo "management.endpoint.health.show-details=always" >> application.properties
          echo "management.endpoint.health.access=unrestricted" >> application.properties
          echo "management.endpoints.web.exposure.include=health,info,metrics,prometheus" >> application.properties
          echo "management.endpoint.prometheus.show-details=always" >> application.properties
          echo "management.endpoint.info.access=unrestricted" >> application.properties
          echo "management.endpoint.info.show-details=always" >> application.properties
          echo "management.endpoint.metrics.access=unrestricted" >> application.properties
          echo "management.endpoint.metrics.show-details=always" >> application.properties
          echo "management.endpoint.prometheus.enabled=true" >> application.properties
          echo "management.metrics.export.prometheus.enabled=true" >> application.properties
      
          echo "spring.datasource.url=jdbc:mysql://mysqldb:3306/${{ secrets.MYSQL_DATABASE }}?allowPublicKeyRetrieval=true&useSSL=false" >> application.properties
          echo "spring.datasource.username=${{ secrets.MYSQL_USER }}" >> application.properties
          echo "spring.datasource.password=${{ secrets.MYSQL_PASSWORD }}" >> application.properties
          echo "spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver" >> application.properties
      
          echo "spring.jpa.hibernate.ddl-auto=create" >> application.properties
          echo "spring.jpa.show-sql=true" >> application.properties
          echo "spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect" >> application.properties
          echo "spring.jpa.properties.hibernate.format_sql=true" >> application.properties
      
          echo "spring.flyway.enabled=false" >> application.properties
          echo "spring.sql.init.mode=always" >> application.properties
          echo "spring.jpa.defer-datasource-initialization=true" >> application.properties
      
          echo "server.port=8080" >> application.properties
          echo "app.cors.allowed-origin=http://deti-tqs-08.ua.pt:5173" >> application.properties
      
          echo "logging.level.org.hibernate.SQL=DEBUG" >> application.properties
          echo "logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE" >> application.properties
          echo "logging.level.org.springframework=INFO" >> application.properties
          echo "logging.level.tqs.ChargeUnity=DEBUG" >> application.properties
      
          echo "spring.validation.beanvalidation.enabled=true" >> application.properties
          echo "spring.jpa.open-in-view=false" >> application.properties

      - name: Parar containers anteriores
        working-directory: ChargeUnity
        run: docker compose --env-file .env -f docker-compose.yml down

      - name: Limpar cache de imagens antigas
        run: docker builder prune -a -f

      - name: Build backend (Maven)
        run: mvn -f ChargeUnity/backend/pom.xml clean package

      - name: Subir serviços com Docker Compose
        working-directory: ChargeUnity
        run: docker compose --env-file .env -f docker-compose.yml up -d --build

      
